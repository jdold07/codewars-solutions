//+ ====================================================================================================================
//+
//+ 8 kyu - Calculate Price Excluding VAT  [ ID: 5890d8bc9f0f422cf200006b ] (calculate-price-excluding-vat)
//+ URL: https://www.codewars.com/kata/5890d8bc9f0f422cf200006b
//+ Category: REFERENCE  |  Tags: MATHEMATICS | FUNDAMENTALS
//+
//+ ====================================================================================================================

import { assert } from "vitest"
const { excludingVatPrice } = require("./calculatePriceExcludingVat")

describe("Fixed Tests", () => {
  it("Test", () => {
    assert.deepEqual(excludingVatPrice(230), 200.0)
    assert.deepEqual(excludingVatPrice(123), 106.96)
    assert.deepEqual(excludingVatPrice(777), 675.65)
    assert.deepEqual(excludingVatPrice(460), 400.0)
    assert.deepEqual(excludingVatPrice(null), -1)
    assert.deepEqual(excludingVatPrice(123), 106.96)
    assert.deepEqual(excludingVatPrice(124), 107.83)
    assert.deepEqual(excludingVatPrice(125), 108.7)
    assert.deepEqual(excludingVatPrice(126), 109.57)
    assert.deepEqual(excludingVatPrice(127), 110.43)
    assert.deepEqual(excludingVatPrice(128), 111.3)
    assert.deepEqual(excludingVatPrice(129), 112.17)
    assert.deepEqual(excludingVatPrice(130), 113.04)
    assert.deepEqual(excludingVatPrice(131), 113.91)
    assert.deepEqual(excludingVatPrice(132), 114.78)
    assert.deepEqual(excludingVatPrice(133), 115.65)
    assert.deepEqual(excludingVatPrice(134), 116.52)
    assert.deepEqual(excludingVatPrice(135), 117.39)
    assert.deepEqual(excludingVatPrice(136), 118.26)
    assert.deepEqual(excludingVatPrice(137), 119.13)
    assert.deepEqual(excludingVatPrice(138), 120)
    assert.deepEqual(excludingVatPrice(139), 120.87)
    assert.deepEqual(excludingVatPrice(140), 121.74)
    assert.deepEqual(excludingVatPrice(141), 122.61)
    assert.deepEqual(excludingVatPrice(142), 123.48)
    assert.deepEqual(excludingVatPrice(143), 124.35)
    assert.deepEqual(excludingVatPrice(144), 125.22)
    assert.deepEqual(excludingVatPrice(145), 126.09)
    assert.deepEqual(excludingVatPrice(146), 126.96)
    assert.deepEqual(excludingVatPrice(147), 127.83)
    assert.deepEqual(excludingVatPrice(148), 128.7)
    assert.deepEqual(excludingVatPrice(149), 129.57)
    assert.deepEqual(excludingVatPrice(150), 130.43)
    assert.deepEqual(excludingVatPrice(151), 131.3)
    assert.deepEqual(excludingVatPrice(152), 132.17)
    assert.deepEqual(excludingVatPrice(153), 133.04)
    assert.deepEqual(excludingVatPrice(154), 133.91)
    assert.deepEqual(excludingVatPrice(155), 134.78)
    assert.deepEqual(excludingVatPrice(156), 135.65)
    assert.deepEqual(excludingVatPrice(157), 136.52)
    assert.deepEqual(excludingVatPrice(158), 137.39)
    assert.deepEqual(excludingVatPrice(159), 138.26)
    assert.deepEqual(excludingVatPrice(160), 139.13)
    assert.deepEqual(excludingVatPrice(161), 140)
    assert.deepEqual(excludingVatPrice(162), 140.87)
    assert.deepEqual(excludingVatPrice(163), 141.74)
    assert.deepEqual(excludingVatPrice(164), 142.61)
    assert.deepEqual(excludingVatPrice(165), 143.48)
    assert.deepEqual(excludingVatPrice(166), 144.35)
    assert.deepEqual(excludingVatPrice(167), 145.22)
    assert.deepEqual(excludingVatPrice(168), 146.09)
    assert.deepEqual(excludingVatPrice(169), 146.96)
    assert.deepEqual(excludingVatPrice(170), 147.83)
    assert.deepEqual(excludingVatPrice(171), 148.7)
    assert.deepEqual(excludingVatPrice(172), 149.57)
    assert.deepEqual(excludingVatPrice(173), 150.43)
    assert.deepEqual(excludingVatPrice(174), 151.3)
    assert.deepEqual(excludingVatPrice(175), 152.17)
    assert.deepEqual(excludingVatPrice(176), 153.04)
    assert.deepEqual(excludingVatPrice(177), 153.91)
    assert.deepEqual(excludingVatPrice(178), 154.78)
    assert.deepEqual(excludingVatPrice(179), 155.65)
    assert.deepEqual(excludingVatPrice(180), 156.52)
    assert.deepEqual(excludingVatPrice(181), 157.39)
    assert.deepEqual(excludingVatPrice(182), 158.26)
    assert.deepEqual(excludingVatPrice(183), 159.13)
    assert.deepEqual(excludingVatPrice(184), 160)
    assert.deepEqual(excludingVatPrice(185), 160.87)
    assert.deepEqual(excludingVatPrice(186), 161.74)
    assert.deepEqual(excludingVatPrice(187), 162.61)
    assert.deepEqual(excludingVatPrice(188), 163.48)
    assert.deepEqual(excludingVatPrice(189), 164.35)
    assert.deepEqual(excludingVatPrice(190), 165.22)
    assert.deepEqual(excludingVatPrice(191), 166.09)
    assert.deepEqual(excludingVatPrice(192), 166.96)
    assert.deepEqual(excludingVatPrice(193), 167.83)
    assert.deepEqual(excludingVatPrice(194), 168.7)
    assert.deepEqual(excludingVatPrice(195), 169.57)
    assert.deepEqual(excludingVatPrice(196), 170.43)
    assert.deepEqual(excludingVatPrice(197), 171.3)
    assert.deepEqual(excludingVatPrice(198), 172.17)
    assert.deepEqual(excludingVatPrice(199), 173.04)
    assert.deepEqual(excludingVatPrice(200), 173.91)
    assert.deepEqual(excludingVatPrice(201), 174.78)
    assert.deepEqual(excludingVatPrice(202), 175.65)
    assert.deepEqual(excludingVatPrice(203), 176.52)
    assert.deepEqual(excludingVatPrice(204), 177.39)
    assert.deepEqual(excludingVatPrice(205), 178.26)
    assert.deepEqual(excludingVatPrice(206), 179.13)
    assert.deepEqual(excludingVatPrice(207), 180)
    assert.deepEqual(excludingVatPrice(208), 180.87)
    assert.deepEqual(excludingVatPrice(209), 181.74)
    assert.deepEqual(excludingVatPrice(210), 182.61)
    assert.deepEqual(excludingVatPrice(211), 183.48)
    assert.deepEqual(excludingVatPrice(212), 184.35)
    assert.deepEqual(excludingVatPrice(213), 185.22)
    assert.deepEqual(excludingVatPrice(214), 186.09)
    assert.deepEqual(excludingVatPrice(215), 186.96)
    assert.deepEqual(excludingVatPrice(216), 187.83)
    assert.deepEqual(excludingVatPrice(217), 188.7)
    assert.deepEqual(excludingVatPrice(218), 189.57)
    assert.deepEqual(excludingVatPrice(219), 190.43)
    assert.deepEqual(excludingVatPrice(220), 191.3)
    assert.deepEqual(excludingVatPrice(221), 192.17)
    assert.deepEqual(excludingVatPrice(222), 193.04)
    assert.deepEqual(excludingVatPrice(223), 193.91)
    assert.deepEqual(excludingVatPrice(224), 194.78)
    assert.deepEqual(excludingVatPrice(225), 195.65)
    assert.deepEqual(excludingVatPrice(226), 196.52)
    assert.deepEqual(excludingVatPrice(227), 197.39)
    assert.deepEqual(excludingVatPrice(228), 198.26)
    assert.deepEqual(excludingVatPrice(229), 199.13)
    assert.deepEqual(excludingVatPrice(230), 200)
  })
  it("Edge Case", () => {
    assert.deepEqual(excludingVatPrice(0), 0)
  })
})

describe("Random Tests", () => {
  it("Test", () => {
    function solve(price) {
      return price != null ? parseFloat((price / 1.15).toFixed(2)) : -1
    }
    for (let f = 100; f--; ) {
      let target = Math.random() < 0.2 ? null : 0 | (100000 * Math.random())
      assert.deepEqual(excludingVatPrice(target), solve(target))
    }
  })
})
